// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiSalud1.Datos;

#nullable disable

namespace ServiSalud1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230924190729_Prueba1")]
    partial class Prueba1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiSalud1.Models.Clinica", b =>
                {
                    b.Property<int>("Id_Clinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Clinica"));

                    b.Property<string>("Nombre_clinica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Clinica");

                    b.ToTable("Clinica");
                });

            modelBuilder.Entity("ServiSalud1.Models.Empleados", b =>
                {
                    b.Property<int>("Id_empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_empleado"));

                    b.Property<string>("Apellido_empleado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Id_Especialidad")
                        .HasColumnType("int");

                    b.Property<int>("Id_clinica")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre_empleado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id_empleado");

                    b.HasIndex("Id_Especialidad");

                    b.HasIndex("Id_clinica");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ServiSalud1.Models.Especialidad", b =>
                {
                    b.Property<int>("Id_especialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_especialidad"));

                    b.Property<string>("Especialidad_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_especialidad");

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("ServiSalud1.Models.Empleados", b =>
                {
                    b.HasOne("ServiSalud1.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("Id_Especialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Clinica", "Clinica")
                        .WithMany()
                        .HasForeignKey("Id_clinica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Especialidad");
                });
#pragma warning restore 612, 618
        }
    }
}
