// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiSalud1.Datos;

#nullable disable

namespace ServiSalud1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiSalud1.Models.Citas", b =>
                {
                    b.Property<int>("Id_citas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_citas"));

                    b.Property<DateTime>("Fechas_citas")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_empleado")
                        .HasColumnType("int");

                    b.HasKey("Id_citas");

                    b.HasIndex("Id_empleado");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica", b =>
                {
                    b.Property<int>("Id_Clinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Clinica"));

                    b.Property<string>("Nombre_clinica")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id_Clinica");

                    b.ToTable("Clinica");

                    b.HasData(
                        new
                        {
                            IdClinica = 101,
                            Nombreclinica = "SERVISALUD CESPEDES",
                            Ubicacion = "Tomaykichwa"
                        },
                        new
                        {
                            IdClinica = 102,
                            Nombreclinica = "SERVISALUD CESPEDES",
                            Ubicacion = "Lima"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica_servicios", b =>
                {
                    b.Property<int>("Id_Clinica_servicios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Clinica_servicios"));

                    b.Property<int>("Id_clinica")
                        .HasColumnType("int");

                    b.Property<int>("Id_serv")
                        .HasColumnType("int");

                    b.HasKey("Id_Clinica_servicios");

                    b.HasIndex("Id_clinica");

                    b.HasIndex("Id_serv");

                    b.ToTable("Clinica_servicios");
                });

            modelBuilder.Entity("ServiSalud1.Models.Empleados", b =>
                {
                    b.Property<int>("Id_empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_empleado"));

                    b.Property<string>("Apellido_empleado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Id_Clinica")
                        .HasColumnType("int");

                    b.Property<int>("Id_especialidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre_empleado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id_empleado");

                    b.HasIndex("Id_Clinica");

                    b.HasIndex("Id_especialidad");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ServiSalud1.Models.Equipo_produccion", b =>
                {
                    b.Property<int>("Id_equipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_equipo"));

                    b.Property<string>("Nombre_equipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_equipo");

                    b.ToTable("Equipo_produccion");
                });

            modelBuilder.Entity("ServiSalud1.Models.Especialidad", b =>
                {
                    b.Property<int>("Id_especialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_especialidad"));

                    b.Property<string>("Especialidad_nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_especialidad");

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("ServiSalud1.Models.Historial_citas", b =>
                {
                    b.Property<int>("ID_Historial_citas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Historial_citas"));

                    b.Property<int>("Historial_ClinicoId_historial")
                        .HasColumnType("int");

                    b.Property<int>("Id_citas")
                        .HasColumnType("int");

                    b.Property<int>("Id_historial")
                        .HasColumnType("int");

                    b.HasKey("ID_Historial_citas");

                    b.HasIndex("Historial_ClinicoId_historial");

                    b.HasIndex("Id_citas");

                    b.ToTable("Historial_citas");
                });

            modelBuilder.Entity("ServiSalud1.Models.Historial_clinico", b =>
                {
                    b.Property<int>("Id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_historial"));

                    b.Property<string>("Alergias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado_cardiaco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ultimo_rito_cardiaco_X_minuto")
                        .HasColumnType("int");

                    b.HasKey("Id_historial");

                    b.ToTable("Historial_Clinico");
                });

            modelBuilder.Entity("ServiSalud1.Models.Pacientes", b =>
                {
                    b.Property<int>("Id_pacientes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_pacientes"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Historial_ClinicoId_historial")
                        .HasColumnType("int");

                    b.Property<int>("Id_historial")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Telefono")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.HasKey("Id_pacientes");

                    b.HasIndex("Historial_ClinicoId_historial");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ServiSalud1.Models.Servicios", b =>
                {
                    b.Property<int>("Id_serv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_serv"));

                    b.Property<int>("Equipo_ProduccionId_equipo")
                        .HasColumnType("int");

                    b.Property<int>("Id_equipo")
                        .HasColumnType("int");

                    b.Property<string>("Nom_serv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_serv");

                    b.HasIndex("Equipo_ProduccionId_equipo");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("ServiSalud1.Models.Citas", b =>
                {
                    b.HasOne("ServiSalud1.Models.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("Id_empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica_servicios", b =>
                {
                    b.HasOne("ServiSalud1.Models.Clinica", "Clinica")
                        .WithMany()
                        .HasForeignKey("Id_clinica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Servicios", "Servicios")
                        .WithMany()
                        .HasForeignKey("Id_serv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ServiSalud1.Models.Empleados", b =>
                {
                    b.HasOne("ServiSalud1.Models.Clinica", "Clinica")
                        .WithMany()
                        .HasForeignKey("Id_Clinica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("Id_especialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("ServiSalud1.Models.Historial_citas", b =>
                {
                    b.HasOne("ServiSalud1.Models.Historial_clinico", "Historial_Clinico")
                        .WithMany()
                        .HasForeignKey("Historial_ClinicoId_historial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Citas", "Citas")
                        .WithMany()
                        .HasForeignKey("Id_citas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citas");

                    b.Navigation("Historial_Clinico");
                });

            modelBuilder.Entity("ServiSalud1.Models.Pacientes", b =>
                {
                    b.HasOne("ServiSalud1.Models.Historial_clinico", "Historial_Clinico")
                        .WithMany()
                        .HasForeignKey("Historial_ClinicoId_historial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Historial_Clinico");
                });

            modelBuilder.Entity("ServiSalud1.Models.Servicios", b =>
                {
                    b.HasOne("ServiSalud1.Models.Equipo_produccion", "Equipo_Produccion")
                        .WithMany()
                        .HasForeignKey("Equipo_ProduccionId_equipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo_Produccion");
                });
#pragma warning restore 612, 618
        }
    }
}
