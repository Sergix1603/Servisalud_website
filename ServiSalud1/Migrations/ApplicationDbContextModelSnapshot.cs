// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiSalud1.Datos;

#nullable disable

namespace ServiSalud1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiSalud1.Models.Citas", b =>
                {
                    b.Property<int>("Id_citas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_citas"));

                    b.Property<DateTime>("Fechas_citas")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_especialidad")
                        .HasColumnType("int");

                    b.Property<int>("Id_historial")
                        .HasColumnType("int");

                    b.HasKey("Id_citas");

                    b.HasIndex("Id_especialidad");

                    b.HasIndex("Id_historial");

                    b.ToTable("Citas");

                    b.HasData(
                        new
                        {
                            Idcitas = 9621,
                            Fechascitas = new DateTime(2023, 1, 25, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Idespecialidad = 4121,
                            Idhistorial = 851
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica", b =>
                {
                    b.Property<int>("Id_Clinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Clinica"));

                    b.Property<string>("Nombre_clinica")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id_Clinica");

                    b.ToTable("Clinica");

                    b.HasData(
                        new
                        {
                            IdClinica = 101,
                            Nombreclinica = "SERVISALUD CESPEDES",
                            Ubicacion = "Tomaykichwa"
                        },
                        new
                        {
                            IdClinica = 102,
                            Nombreclinica = "SERVISALUD CESPEDES",
                            Ubicacion = "Lima"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica_servicios", b =>
                {
                    b.Property<int>("Id_clinica")
                        .HasColumnType("int");

                    b.Property<int>("Id_serv")
                        .HasColumnType("int");

                    b.Property<int>("Id_Clinica_servicios")
                        .HasColumnType("int");

                    b.HasKey("Id_clinica", "Id_serv");

                    b.HasIndex("Id_serv");

                    b.ToTable("Clinica_servicios");

                    b.HasData(
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7001,
                            IdClinicaservicios = 111
                        },
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7002,
                            IdClinicaservicios = 112
                        },
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7005,
                            IdClinicaservicios = 113
                        },
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7006,
                            IdClinicaservicios = 114
                        },
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7007,
                            IdClinicaservicios = 115
                        },
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7009,
                            IdClinicaservicios = 116
                        },
                        new
                        {
                            Idclinica = 101,
                            Idserv = 7010,
                            IdClinicaservicios = 117
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7001,
                            IdClinicaservicios = 118
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7002,
                            IdClinicaservicios = 129
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7003,
                            IdClinicaservicios = 120
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7004,
                            IdClinicaservicios = 121
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7005,
                            IdClinicaservicios = 122
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7006,
                            IdClinicaservicios = 123
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7007,
                            IdClinicaservicios = 124
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7008,
                            IdClinicaservicios = 125
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7009,
                            IdClinicaservicios = 126
                        },
                        new
                        {
                            Idclinica = 102,
                            Idserv = 7010,
                            IdClinicaservicios = 127
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Empleados", b =>
                {
                    b.Property<int>("Id_empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_empleado"));

                    b.Property<int>("Id_Clinica")
                        .HasColumnType("int");

                    b.Property<int>("Id_especialidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre_empleado")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id_empleado");

                    b.HasIndex("Id_Clinica");

                    b.HasIndex("Id_especialidad");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Idempleado = 202001,
                            IdClinica = 102,
                            Idespecialidad = 4121,
                            Nacimiento = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombreempleado = "Carlos Vasquez",
                            Sexo = "M",
                            Telefono = 941449558
                        },
                        new
                        {
                            Idempleado = 202002,
                            IdClinica = 101,
                            Idespecialidad = 4120,
                            Nacimiento = new DateTime(1981, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombreempleado = "Luis Quispe",
                            Sexo = "M",
                            Telefono = 941449544
                        },
                        new
                        {
                            Idempleado = 202003,
                            IdClinica = 102,
                            Idespecialidad = 4122,
                            Nacimiento = new DateTime(1975, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombreempleado = "Ernesto Vargas",
                            Sexo = "M",
                            Telefono = 941446411
                        },
                        new
                        {
                            Idempleado = 202004,
                            IdClinica = 102,
                            Idespecialidad = 4123,
                            Nacimiento = new DateTime(1980, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombreempleado = "Juan Contreras",
                            Sexo = "M",
                            Telefono = 941449542
                        },
                        new
                        {
                            Idempleado = 202005,
                            IdClinica = 101,
                            Idespecialidad = 4124,
                            Nacimiento = new DateTime(1971, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombreempleado = "Ruben Hurtado",
                            Sexo = "M",
                            Telefono = 941449526
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Equipo_produccion", b =>
                {
                    b.Property<int>("Id_equipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_equipo"));

                    b.Property<string>("Nombre_equipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_equipo");

                    b.ToTable("Equipo_produccion");

                    b.HasData(
                        new
                        {
                            Idequipo = 220,
                            Nombreequipo = "Esfingomanometro"
                        },
                        new
                        {
                            Idequipo = 221,
                            Nombreequipo = "Termostato"
                        },
                        new
                        {
                            Idequipo = 222,
                            Nombreequipo = "Rayos X"
                        },
                        new
                        {
                            Idequipo = 223,
                            Nombreequipo = "Guantes Latex"
                        },
                        new
                        {
                            Idequipo = 224,
                            Nombreequipo = "Ultra sonido"
                        },
                        new
                        {
                            Idequipo = 225,
                            Nombreequipo = "Estetoscopio"
                        },
                        new
                        {
                            Idequipo = 226,
                            Nombreequipo = "Tensiometro Aneroide"
                        },
                        new
                        {
                            Idequipo = 227,
                            Nombreequipo = "Sillones reclinables"
                        },
                        new
                        {
                            Idequipo = 228,
                            Nombreequipo = "Computadora"
                        },
                        new
                        {
                            Idequipo = 229,
                            Nombreequipo = "Bascula"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Especialidad", b =>
                {
                    b.Property<int>("Id_especialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_especialidad"));

                    b.Property<string>("Especialidad_nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_especialidad");

                    b.ToTable("Especialidad");

                    b.HasData(
                        new
                        {
                            Idespecialidad = 4120,
                            Especialidadnombre = "Reumatología"
                        },
                        new
                        {
                            Idespecialidad = 4121,
                            Especialidadnombre = "Dermatología"
                        },
                        new
                        {
                            Idespecialidad = 4122,
                            Especialidadnombre = "Enfermería"
                        },
                        new
                        {
                            Idespecialidad = 4123,
                            Especialidadnombre = "Cardiología"
                        },
                        new
                        {
                            Idespecialidad = 4124,
                            Especialidadnombre = "Nutrición"
                        },
                        new
                        {
                            Idespecialidad = 4125,
                            Especialidadnombre = "Endocrinología"
                        },
                        new
                        {
                            Idespecialidad = 4126,
                            Especialidadnombre = "Neurología"
                        },
                        new
                        {
                            Idespecialidad = 4127,
                            Especialidadnombre = "Traumatología"
                        },
                        new
                        {
                            Idespecialidad = 4128,
                            Especialidadnombre = "Terapia"
                        },
                        new
                        {
                            Idespecialidad = 4129,
                            Especialidadnombre = "Psicología"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Historial_clinico", b =>
                {
                    b.Property<int>("Id_historial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_historial"));

                    b.Property<string>("Alergias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_historial");

                    b.ToTable("Historial_Clinico");

                    b.HasData(
                        new
                        {
                            Idhistorial = 851,
                            Alergias = "Aines",
                            Fechaingreso = new DateTime(2023, 11, 19, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Idhistorial = 852,
                            Alergias = "-",
                            Fechaingreso = new DateTime(2023, 11, 19, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Login_Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Login_Empleado");
                });

            modelBuilder.Entity("ServiSalud1.Models.Login_Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Login_Paciente");
                });

            modelBuilder.Entity("ServiSalud1.Models.Pacientes", b =>
                {
                    b.Property<int>("Id_pacientes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_pacientes"));

                    b.Property<double>("Altura")
                        .HasColumnType("float");

                    b.Property<string>("Antecedentes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DNI")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<int>("Id_historial")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Sexo")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id_pacientes");

                    b.HasIndex("Id_historial")
                        .IsUnique();

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Idpacientes = 15020,
                            Altura = 1.6499999999999999,
                            Antecedentes = "Cancer",
                            Apellido = "Burga",
                            Correo = "sergioB@gmail.com",
                            DNI = "73255963",
                            Direccion = "Calle La Libertad 124, La Molina",
                            Idhistorial = 851,
                            Nacimiento = new DateTime(2004, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Sergio",
                            Peso = 80.5,
                            Sexo = "M",
                            Telefono = "987654321"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Servicios", b =>
                {
                    b.Property<int>("Id_serv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_serv"));

                    b.Property<int>("Id_equipo")
                        .HasColumnType("int");

                    b.Property<string>("Nom_serv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_serv");

                    b.HasIndex("Id_equipo");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            Idserv = 7001,
                            Idequipo = 220,
                            Nomserv = "Urgencias"
                        },
                        new
                        {
                            Idserv = 7002,
                            Idequipo = 221,
                            Nomserv = "Pediatria"
                        },
                        new
                        {
                            Idserv = 7003,
                            Idequipo = 222,
                            Nomserv = "Radiografias"
                        },
                        new
                        {
                            Idserv = 7004,
                            Idequipo = 223,
                            Nomserv = "Dermatologia"
                        },
                        new
                        {
                            Idserv = 7005,
                            Idequipo = 224,
                            Nomserv = "Terapia"
                        },
                        new
                        {
                            Idserv = 7006,
                            Idequipo = 225,
                            Nomserv = "Medicina General"
                        },
                        new
                        {
                            Idserv = 7007,
                            Idequipo = 226,
                            Nomserv = "Ambulancias"
                        },
                        new
                        {
                            Idserv = 7008,
                            Idequipo = 227,
                            Nomserv = "Psicologia"
                        },
                        new
                        {
                            Idserv = 7009,
                            Idequipo = 228,
                            Nomserv = "Ventanilla"
                        },
                        new
                        {
                            Idserv = 7010,
                            Idequipo = 229,
                            Nomserv = "Triaje"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Usuario", b =>
                {
                    b.Property<string>("Id_Usuario")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = "admin",
                            Apellido = "Cornejo",
                            Contra = "admin",
                            Nombre = "Adrian",
                            TipoUsuario = "Administrador"
                        },
                        new
                        {
                            IdUsuario = "Spiderman",
                            Apellido = "Parker",
                            Contra = "12345",
                            Nombre = "Peter",
                            TipoUsuario = "Paciente"
                        },
                        new
                        {
                            IdUsuario = "LQuispe",
                            Apellido = "Quispe",
                            Contra = "12345",
                            Nombre = "Luis",
                            TipoUsuario = "Empleado"
                        });
                });

            modelBuilder.Entity("ServiSalud1.Models.Citas", b =>
                {
                    b.HasOne("ServiSalud1.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("Id_especialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Historial_clinico", "Historial_clinico")
                        .WithMany("Citas")
                        .HasForeignKey("Id_historial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");

                    b.Navigation("Historial_clinico");
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica_servicios", b =>
                {
                    b.HasOne("ServiSalud1.Models.Clinica", "Clinica")
                        .WithMany("Clinica_Servicios")
                        .HasForeignKey("Id_clinica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Servicios", "Servicios")
                        .WithMany("Clinica_Servicios")
                        .HasForeignKey("Id_serv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ServiSalud1.Models.Empleados", b =>
                {
                    b.HasOne("ServiSalud1.Models.Clinica", "Clinica")
                        .WithMany("Empleados")
                        .HasForeignKey("Id_Clinica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiSalud1.Models.Especialidad", "Especialidad")
                        .WithMany("Empleados")
                        .HasForeignKey("Id_especialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("ServiSalud1.Models.Pacientes", b =>
                {
                    b.HasOne("ServiSalud1.Models.Historial_clinico", "Historial_clinico")
                        .WithOne("Pacientes")
                        .HasForeignKey("ServiSalud1.Models.Pacientes", "Id_historial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Historial_clinico");
                });

            modelBuilder.Entity("ServiSalud1.Models.Servicios", b =>
                {
                    b.HasOne("ServiSalud1.Models.Equipo_produccion", "Equipo_produccion")
                        .WithMany("Servicios")
                        .HasForeignKey("Id_equipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo_produccion");
                });

            modelBuilder.Entity("ServiSalud1.Models.Clinica", b =>
                {
                    b.Navigation("Clinica_Servicios");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ServiSalud1.Models.Equipo_produccion", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ServiSalud1.Models.Especialidad", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ServiSalud1.Models.Historial_clinico", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("ServiSalud1.Models.Servicios", b =>
                {
                    b.Navigation("Clinica_Servicios");
                });
#pragma warning restore 612, 618
        }
    }
}
